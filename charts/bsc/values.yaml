# Default values for bsc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

terminationGracePeriodSeconds: 180

image:
  repository: dysnix/bsc
  tag: latest
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# enable this only once - when your blockchain is empty. It overwrites everything
init_genesis: true

# Don't use spaces or special chars
bsc:
  # we don't have other chains, it's just a pod label for now
  chain: testnet
  #  Blockchain sync mode ("fast", "full", or "light") (default: fast)
  syncmode: "fast"
  # Blockchain garbage collection mode ("full", "archive") (default: "full")
  gcmode: "full"
  base_path: "/data"
  httpApi: "eth,net,web3,txpool,parlia"
  httpVhosts: "*"
  wsApi: "net,web3,eth"
  wsOrigins: "*"
  graphQlVhosts: "*"
  maxpeers: 50
  cache: 4096

livenessProbe:
  initialDelaySeconds: 300
  periodSeconds: 300
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 2

service:
  type: ClusterIP
  httpPortName: &httpPortName jsonhttp
  httpPort: &httpPort 8575
  wsPort: &wsPort 8576
  wsPortName: &wsPortName web-socket
  graphQlPort: &graphQlPort 8577
  graphQlPortName: &graphQlPortName qraphql
  p2pPort0: &p2pPort0 30311
  p2pPortName0: &p2pPortName0 p2p
  p2pPortProtocol0: &p2pPortProtocol0 TCP
  p2pPort1: &p2pPort1 30311
  p2pPortName1: &p2pPortName1 p2p-discovery
  p2pPortProtocol1: &p2pPortProtocol1 UDP
  ports:
    - port: *httpPort
      name: *httpPortName
    - port: *wsPort
      name: *wsPortName
    - port: *graphQlPort
      name: *graphQlPortName
    - port: *p2pPort0
      name: *p2pPortName0
      protocol: *p2pPortProtocol0
    - port: *p2pPort1
      name: *p2pPortName1
      protocol: *p2pPortProtocol1

bscCmdOverride: false
bscCmd: ""

externalLB: false
externalLBIP: ""
externalLBSourceRanges: {}
#  - 198.51.100.1/32
#  - 198.51.100.2/32

externalLBp2p: false
externalLBp2pIP: 203.0.113.0

externalLBp2pDiscovery: false
externalLBp2pDiscoveryIP: 203.0.113.0

internalLB: false
internalLBIP: ""

persistence:
  storageClass: "managed-premium" #or standard
  accessMode: ReadWriteOnce
  size: "1000Gi"


ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: "1000m"
    memory: "2000Mi"
  limits:
    cpu: "3000m"
    memory: "5000Mi"

securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000


nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: "bsc"
              bsc/chain: "testnet"
          topologyKey: failure-domain.beta.kubernetes.io/zone


